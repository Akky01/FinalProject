import React from 'react';
import { any, string, node, number, bool, func, object } from 'prop-types';
import { useSpring, animated } from 'react-spring';

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css = ".AmountPostfix-module_Postfix__3DRYH {\n  font-weight: bold;\n  white-space: nowrap;\n}";
var classes = { "Postfix": "AmountPostfix-module_Postfix__3DRYH" };
styleInject(css);

function AmountPostfix(_ref) {
  var value = _ref.value,
      className = _ref.className;

  return React.createElement(
    'div',
    { className: classes.Postfix + ' ' + (className || '') },
    value || 0,
    ' \u0448\u0442.'
  );
}

AmountPostfix.propTypes = {
  value: any,
  className: string
};

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var objectWithoutProperties = function (obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
};

function AnimateOpacity(_ref) {
  var children = _ref.children,
      className = _ref.className,
      delay = _ref.delay,
      props = objectWithoutProperties(_ref, ['children', 'className', 'delay']);

  var config = useSpring({
    delay: delay,
    config: {
      tension: 220
    },
    to: { opacity: 1 },
    from: { opacity: 0 } });
  return React.createElement(
    animated.div,
    _extends({ style: config, className: className || '' }, props),
    children
  );
}

AnimateOpacity.propTypes = {
  className: string,
  children: node,
  delay: number
};

var css$1 = ".Button-module-module_Button__eoXJy {\n  position: relative;\n  z-index: 5;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 36px;\n  padding-top: 0;\n  padding-bottom: 2px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin: 0;\n  font-size: 15px;\n  text-align: center;\n  border: none;\n  cursor: pointer;\n  outline: none;\n  transition: all 0.2s;\n  box-shadow: none;\n  border-radius: 4px;\n  text-decoration: none;\n}\n\n.Button-module-module_Button__eoXJy:disabled {\n  opacity: 0.5;\n  pointer-events: none;\n  cursor: default;\n}\n\n.Button-module-module_Button__eoXJy svg {\n  position: relative;\n  flex-shrink: 0;\n  display: block;\n  width: 20px;\n  height: 20px;\n  margin-right: 5px;\n}\n\n.Button-module-module_JustIcon__1WYtn {\n  padding-left: 0;\n  padding-right: 0;\n  width: 36px;\n}\n\n.Button-module-module_JustIcon__1WYtn svg {\n  margin-right: 0;\n}\n\n.Button-module-module_Button__eoXJy [class*=\"excel-icon\"] {\n  top: 1px;\n  fill: var(--excel);\n}\n\n.Button-module-module_Button__eoXJy:hover [class*=\"excel-icon\"] {\n  fill: white;\n}\n\na.Button-module-module_Button__eoXJy {\n  padding-bottom: 0;\n}\n\na.Button-module-module_Button__eoXJy:hover {\n  text-decoration: none;\n}\n\n.Button-module-module_main__3foem {\n  color: white;\n  border: 2px solid var(--theme);\n  background-color: var(--theme);\n}\n\n.Button-module-module_main__3foem svg {\n  fill: white;\n}\n\n.Button-module-module_main__3foem:hover {\n  color: var(--theme);\n  background-color: white;\n}\n\n.Button-module-module_main__3foem:hover svg {\n  fill: var(--theme);\n}\n\n.Button-module-module_light__3tV4t {\n  color: var(--theme);\n  border: 2px solid var(--theme);\n  background-color: white;\n}\n\n.Button-module-module_light__3tV4t svg {\n  fill: var(--theme);\n}\n\n.Button-module-module_light__3tV4t:hover {\n  color: white;\n  background-color: var(--theme);\n}\n\n.Button-module-module_light__3tV4t:hover svg {\n  fill: white;\n}";
var classes$1 = { "Button": "Button-module-module_Button__eoXJy", "JustIcon": "Button-module-module_JustIcon__1WYtn", "main": "Button-module-module_main__3foem", "light": "Button-module-module_light__3tV4t" };
styleInject(css$1);

function Button(_ref) {
  var className = _ref.className,
      additionalClass = _ref.additionalClass,
      onClick = _ref.onClick,
      children = _ref.children,
      type = _ref.type,
      style = _ref.style,
      disabled = _ref.disabled,
      justIcon = _ref.justIcon;


  var buttonClass = classes$1.Button + " " + classes$1[className] + " " + (additionalClass ? additionalClass : '') + " " + (justIcon ? classes$1.JustIcon : '');

  return React.createElement(
    "button",
    {
      disabled: disabled,
      className: buttonClass,
      type: type ? type : 'button',
      onClick: onClick ? onClick : null,
      style: style ? style : null },
    children
  );
}

Button.propTypes = {
  justIcon: bool,
  className: string.isRequired,
  additionalClass: string,
  onClick: func,
  children: any,
  type: string,
  style: object,
  disabled: bool,
  checked: bool,
  onChange: func,
  name: string
};

var css$2 = ".Title-module_Title__3pWUa {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: baseline;\n  margin-bottom: 25px;\n  font-size: 38px;\n}\n\n@media only screen and (max-width: 980px) {\n  .Title-module_Title__3pWUa {\n    font-size: 32px;\n  }\n}\n\n@media only screen and (max-width: 480px) {\n  .Title-module_Title__3pWUa {\n    font-size: 26px;\n  }\n}\n\n.Title-module_TitleText__2tCrY {\n  margin-right: 10px;\n}\n\n.Title-module_Subtitle__1wMJw {\n  color: var(--midGray);\n  font-size: 0.5em;\n}\n\n.Title-module_Subtitle__1wMJw > div {\n  white-space: normal;\n}";
var classes$2 = { "Title": "Title-module_Title__3pWUa", "TitleText": "Title-module_TitleText__2tCrY", "Subtitle": "Title-module_Subtitle__1wMJw" };
styleInject(css$2);

function Title(_ref) {
  var children = _ref.children,
      subtitle = _ref.subtitle;

  return React.createElement(
    'div',
    { className: '' + classes$2.Title },
    React.createElement(
      'h1',
      { className: classes$2.TitleText },
      children
    ),
    subtitle && React.createElement(
      'div',
      { className: classes$2.Subtitle },
      subtitle
    )
  );
}

Title.propTypes = {
  children: any.isRequired,
  subtitle: any
};

var css$3 = ":root {\n  --font: 'PT Sans', Arial, Helvetica, sans-serif;\n  --theme: #ec482f;\n  --mainColor: #1d2225;\n  --lightColor: #7a7d81;\n  --linkColor: #6b707c;\n  --black: #111111;\n  --gray: #757b87;\n  --blueGray: #f5f5f5;\n  --midGray: #5c626e;\n  --lightGray: #e3e3e3;\n  --lighterGray: #ebebeb;\n  \n  --inputBg: #fbfbfb;\n  --placeholder: #7a7d81;\n  --darkBg: #292929;\n  --lightBorder: #dfe0e1;\n  \n  --green: #27AE60;\n  --red: #ec482f;\n  --blue: #00c2ff;\n  --yellow: #ffde1b;\n  --orange: orange;\n  \n  --facebook: #3a5997;\n  --twitter: #30acee;\n  --telegram: #30acee;\n  --vk: #45668e;\n  --ok: #f68620;\n  --viber: #79489c;\n  --facetime: #46b96d;\n  --skype: #1eabe2;\n  --whatsapp: #50b948;\n  --excel: #267248;\n  --google: #d8634f;\n  \n  --shadow: 0 0 20px rgba(9, 9, 9, 0.25);\n}\n\n\nhtml, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, sub, tt, var, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video, hr {\n  vertical-align: baseline;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  border: 0;\n  font-size: 100%;\n  font-weight: inherit;\n  font-variant: inherit;\n  font-style: inherit;\n  font-family: inherit;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\narticle, address, aside, details, figcaption, figure,\nfooter, header, menu, nav, section, label, small, time, img {\n  display: block;\n}\n\nbody {\n  position: relative;\n  margin: 0;\n  padding: 0;\n  border: 0;\n  min-width: 320px;\n  font-family: var(--font);\n  font-size: 16px;\n  color: var(--mainColor);\n}\n\n@media only screen and (max-width: 768px) {\n  body {\n    font-size: 15px;\n  }\n}\n\n@media only screen and (max-width: 480px) {\n  body {\n    font-size: 14px;\n  }\n}\n\nhtml {\n  -webkit-text-size-adjust: 100%;\n  -ms-text-size-adjust: 100%;\n}\n\nblockquote, q {\n  quotes: none;\n}\n\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: '';\n}\n\nmark {\n  background: none;\n  color: inherit;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  border: 0;\n}\n\nimg {\n  max-width: 100%;\n  height: auto;\n}\n\n*, *:before, *:after {\n  box-sizing: border-box;\n}\n\nsvg {\n  position: relative;\n  display: block;\n  transition: fill 0.2s;\n}\n\na {\n  color: var(--linkColor);\n  text-decoration: none;\n  transition: all 0.2s;\n}\n\na:hover {\n  cursor: pointer;\n  text-decoration: underline;\n}\n\na[href*='mailto:']:hover,\na[href*='tel:']:hover {\n  text-decoration: none;\n}\n\ninput::-ms-clear {\n  display: none;\n}\n\n::-webkit-input-placeholder {\n  color: var(--placeholder);\n}\n\n::-moz-placeholder {\n  color: var(--placeholder);\n}\n\n:-ms-input-placeholder {\n  color: var(--placeholder);\n}\n\n:focus::-webkit-input-placeholder {\n  color: transparent;\n}\n\n:focus::-moz-placeholder {\n  color: transparent;\n}\n\n:focus:-ms-input-placeholder {\n  color: transparent;\n}\n\n:-ms-input-placeholder {\n  color: var(--placeholder);\n}\n";
var reset_module = {};
styleInject(css$3);

/*
export { default as ContentPager } from "./ContentPager/ContentPager";
export { default as CrossButton } from "./CrossButton/CrossButton";
export { default as CurrencyPostfix } from "./CurrencyPostfix/CurrencyPostfix";
export { default as DateTimeFormat } from "./DateTimeFormat/DateTimeFormat";
export { default as DateFormat } from "./DateFormat/DateFormat";
export { default as FakeInput } from "./FakeInput/FakeInput";
export { default as FormikInput } from "./FormikInput/FormikInput";
export { default as FormikTextarea } from "./FormikTextarea/FormikTextarea";
export { default as FormikDateTimeRange } from "./FormikDateTimeRange/FormikDateTimeRange";
export { default as FormikSelect } from "./FormikSelect/FormikSelect";
export { default as FormikRadio } from "./FormikRadio/FormikRadio";
export { default as FormikRadioLine } from "./FormikRadioLine/FormikRadioLine";
export { default as FormikRadioGroup } from "./FormikRadioGroup/FormikRadioGroup";
export { default as FormErrors } from "./FormErrors/FormErrors";
export { default as FormBlock } from "./FormBlock/FormBlock";
export { default as FormColumn } from "./FormColumn/FormColumn";
export { default as FormRow } from "./FormRow/FormRow";
export { default as FormRowWide } from "./FormRowWide/FormRowWide";
export { default as FormSection } from "./FormSection/FormSection";
export { default as Icon } from "./Icon/Icon";
export { default as Spinner } from "./Spinner/Spinner";
export { default as StatusTag } from "./StatusTag/StatusTag";
export { default as Table } from "./Table/Table";
export { default as Modal } from "./Modal/Modal";
export { default as TTip } from "./TTip/TTip";
export { default as BlankLink } from "./BlankLink/BlankLink";
export * as modalTypes from "./Modal/modalContentTypes";
*/

export { AmountPostfix, AnimateOpacity, Button, Title, reset_module as reset };
//# sourceMappingURL=index.es.js.map
